How did viewing a diff between two versions of a file help you see the bug that
was introduced?
	I could compare the last working version of the game and see what was modified. This helps a lot because it goes right in the line that the change happened. So it save a lot of time I would have to debug the code to find out what was wrong.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
	Having easy access to the history helps to keep track of the changes that were made. Therefore, when a problem happens in a specific part, it is easier to track it down and find the mistake.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
	If the commits were made automatically like Google docs does, we would have too many commits and some of them would contain incomplete information like just part of a funcionality we were adding at the time it was automatically saved. So choosing when to make commits helps to just commit what it is actually necessary. In addition, it helps to keep the changes organized. The only advantage I see of using the automatically saving is when the computer crashes, or somehow it is destroyed, this in terms of commiting the changes in the code, Google docs works perfectly well for its purpose.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
	I think Git allows to save multiple files in one commit because these files may need each other to work while in Google docs the files are independent.  

How can you use the commands git log and git diff to view the history of files?
	The command git log allows the user to see all the commits that were made. Therefore, allowing the user to see, not in details, the changes that were added. The command git diff allow the user to compare two versions of a file or two commits. This allows the user to see the difference in details of the changes that were introduced between the files or commits.

How might using version control make you more confident to make changes that
could break something?
	In my opinion the fact that we can create branches helps a lot, but there is also the fact that if the new changes didn't work well we can just checkout the last working commit and the system will run again. Also, the the command git diff makes it easier to find mistakes because it targets the changes between the commits.

Now that you have your workspace set up, what do you want to try using Git for?
	I wanna post my study notes on Github, and manage projects I am be working on.
